package org.jboss.shrinkwrap.descriptor.impl.webapp30;

import org.jboss.shrinkwrap.descriptor.api.Descriptors;
import org.jboss.shrinkwrap.descriptor.api.ejbjar31.EjbJar31Descriptor;
import org.jboss.shrinkwrap.descriptor.api.webapp30.WebApp30Descriptor;
import org.jboss.shrinkwrap.descriptor.api.webcommon30.DispatcherType;
import org.jboss.shrinkwrap.descriptor.api.webcommon30.TrackingModeType;
import org.jboss.shrinkwrap.descriptor.api.webcommon30.TransportGuaranteeType;
import org.jboss.shrinkwrap.descriptor.api.webcommon30.WebAppVersionType;
import org.junit.Test;


public class WebAppDescriptorImplTest
{
   @Test
   public void testNavigation() throws Exception
   {
	   public void testEjbJarNavigation() throws Exception
		{
			final String webApp = Descriptors.create(EjbJar31Descriptor.class)
				.setModuleName("")
				.setDescription("")
				.setDisplayName("").up()
				.getEnterpriseBeans()
					.getSession()
						.setEjbName("")
						.setEjbClass("")
						.getEnvEntry()
							.setEnvEntryName("")
							.setEnvEntryType("java.lang.Long")
							.setEnvEntryValue("8L")
							.up()
						.getEnvEntry()
							.setEnvEntryName("")
							.setEnvEntryType("java.lang.Long")
							.setEnvEntryValue("8L")
						.up()
					.up()
					.getMessageDriven()
						.setMessageDestinationLink("")
						.getMessageDestinationRef()
							.setLookupName("")
							.setMappedName("")
							.up()
						.up()
					.up()
				.up()
				.getAssemblyDescriptor()
					.getApplicationException()
						.setExceptionClass("")
						.setInherited(true)
						.setRollback(false)
						.up()
					.up()
				.up()
				.exportAsString();
			
		}
	   
	   public void testNavigation() throws Exception
	   {
	      final String webApp = Descriptors.create(WebApp30Descriptor.class)
	         .setVersion(WebAppVersionType._3_0)
	         .setMetadataComplete(false)
	         .setModuleName("")
	         .setDescription("description1")
	         .setDisplayName("displayName1")
	         .getIcon().setSmallIcon("smallIcon1").setLargeIcon("largeIcon1").up()
	         .distributable()
	         .getContextParam()
	               .setDescription("description")
	               .setParamName("paramName")
	               .setParamValue("paramValue").up()
	         .getFilter()
	               .setFilterName("filterName")
	               .setFilterClass("org.jboss.arquillian.class")
	               .setAsyncSupported(false)
	               .setDescription("")
	               .setDisplayName("")
	               .getIcon()
	                     .setSmallIcon("")
	                     .setLargeIcon("")
	               .up()
	               .getInitParam()
	                     .setDescription("description")
	                     .setParamName("")
	                     .setParamValue("").up()
	               .up()
	         .getFilterMapping()
	               .setFilterName("")
	               .setServletName("")
	               .setUrlPattern("")
	               .setDispatcher(DispatcherType._FORWARD).up()
	         .getListener()
	               .setListenerClass("").up()
	         .getServlet()
	               .setAsyncSupported(false)
	               .setEnabled(true)
	               .setJspFile("")
	               .setLoadOnStartup(true)
	               .getMultipartConfig()
	                     .setLocation("")
	                     .setMaxFileSize(10000L)
	                     .setMaxRequestSize(10000L)
	                     .setFileSizeThreshold(100).up()
	               .up()
	         .getServletMapping()
	               .setServletName("")
	               .setUrlPattern("")
	               .up()
	         .getSessionConfig()
	               .getCookieConfig()
	                     .setComment("")
	                     .setDomain("")
	                     .setHttpOnly(true)
	                     .setMaxAge(10)
	                     .setName("")
	                     .setSecure(true)
	                     .setPath("")
	                     .up()
	               .setSessionTimeout(100000)
	               .setTrackingMode(TrackingModeType._URL)
	               .up()
	         .getMimeMapping()
	               .setExtension("")
	               .setMimeType("")
	               .up()
	         .getWelcomeFileList()
	               .setWelcomeFile("")
	               .setWelcomeFile("")
	               .up()
	         .getErrorPage()
	               .setLocation("")
	               .setErrorCode(222)
	               .setExceptionType("")
	               .up()
	         .getJspConfig()
	               .getJspPropertyGroup()
	                     .setBuffer("")
	                     .setDefaultContentType("")
	                     .setDeferredSyntaxAllowedAsLiteral(false)
	                     .setElIgnored(false)
	                     .up()
	               .up()
	         .getSecurityConstraint()
	               .getAuthConstraint()
	                     .setRoleName("")
	                     .setDescription("")
	                     .up()
	               .setDisplayName("")
	               .getUserDataConstraint()
	                     .setDescription("")
	                     .setTransportGuarantee(TransportGuaranteeType._CONFIDENTIAL)
	                     .up()
	               .up()
	         .getLoginConfig()
	               .setAuthMethod("BASIC") 
	               .up()
	         .getSecurityRole()
	               .setDescription("")
	               .setRoleName("")
	               .up()
	         .getEnvEntry()
	               .setDescription("")
	               .setEnvEntryName("")
	               .setEnvEntryType("")
	               .setEnvEntryValue("")
	               .up()
	         .getEnvEntry()
	               .setDescription("")
	               .setEnvEntryName("")
	               .setEnvEntryType("")
	               .setEnvEntryValue("")
	               .up()
	         .getAbsoluteOrdering()
	               .setName("name1")
	               .setName("name2")
	               .setName("")
	               .others().up().up()
	         .exportAsString();
     
   }
   
   @Test
   public void testAbsoluteOrdering() throws Exception
   {
//      WebAppDescriptor<WebAppDescriptorImpl> webAppDescriptor = new WebAppDescriptorImpl();
//      webAppDescriptor.absoluteOrdering().name("myName").up().moduleName("moduleName");
       
   }
}
